# requirements.txt
# P.O.C.E. Project Creator v4.0 - Complete Dependencies
# Enhanced DevOps automation with MCP server integration

# ==========================================
# CORE GUI FRAMEWORK
# ==========================================
customtkinter>=5.2.0          # Modern GUI framework with dark mode support
tkinter                        # Standard Python GUI (usually included)

# ==========================================
# GITHUB AND API INTEGRATION
# ==========================================
PyGithub>=1.59.1              # GitHub API wrapper with full feature support
requests>=2.31.0              # HTTP library for API calls
aiohttp>=3.8.5                # Async HTTP client for parallel requests
httpx>=0.24.1                 # Modern HTTP client with async support

# ==========================================
# FILE PROCESSING AND DOCUMENTS
# ==========================================
PyPDF2>=3.0.1                # PDF file reading and processing
python-docx>=0.8.11           # Microsoft Word document processing
markdown>=3.4.4               # Markdown processing and conversion
Pillow>=10.0.0                # Image processing for GUI enhancements

# ==========================================
# CONFIGURATION AND DATA HANDLING
# ==========================================
PyYAML>=6.0.1                # YAML configuration file handling
pydantic>=2.2.1              # Data validation and settings management
jsonschema>=4.19.0           # JSON schema validation
configparser>=5.3.0          # Configuration file parsing

# ==========================================
# ASYNC AND CONCURRENCY
# ==========================================
asyncio                       # Asynchronous I/O (built-in)
concurrent.futures            # High-level async interface (built-in)
threading                     # Threading support (built-in)
multiprocessing              # Multi-process support (built-in)

# ==========================================
# WORKFLOW AND TASK MANAGEMENT
# ==========================================
celery>=5.3.1                # Distributed task queue
redis>=4.6.0                 # In-memory data store for caching
dramatiq>=1.15.0             # Alternative task queue

# ==========================================
# DEVOPS AND CI/CD INTEGRATION
# ==========================================
docker>=6.1.3                # Docker integration for containerization
kubernetes>=27.2.0           # Kubernetes API client
ansible>=8.2.0               # Infrastructure automation

# ==========================================
# SECURITY AND ENCRYPTION
# ==========================================
cryptography>=41.0.3         # Encryption and security utilities
keyring>=24.2.0              # Secure credential storage
bcrypt>=4.0.1                # Password hashing
passlib>=1.7.4               # Password utilities

# ==========================================
# MONITORING AND LOGGING
# ==========================================
prometheus-client>=0.17.1    # Prometheus metrics client
structlog>=23.1.0            # Structured logging
colorlog>=6.7.0              # Colored logging output
rich>=13.5.2                 # Rich console output and logging

# ==========================================
# TESTING AND QUALITY ASSURANCE
# ==========================================
pytest>=7.4.0                # Testing framework
pytest-asyncio>=0.21.1       # Async testing support
pytest-cov>=4.1.0            # Coverage reporting
pytest-mock>=3.11.1          # Mocking utilities
coverage>=7.2.7              # Code coverage measurement

# ==========================================
# CODE QUALITY TOOLS
# ==========================================
black>=23.7.0                # Code formatting
isort>=5.12.0                # Import sorting
flake8>=6.0.0                # Code linting
mypy>=1.5.1                  # Static type checking
pylint>=2.17.5               # Comprehensive code analysis
bandit>=1.7.5                # Security linting

# ==========================================
# PERFORMANCE AND OPTIMIZATION
# ==========================================
psutil>=5.9.5                # System and process utilities
memory-profiler>=0.61.0      # Memory usage profiling
line-profiler>=4.1.1         # Line-by-line profiling
py-spy>=0.3.14               # Sampling profiler

# ==========================================
# DATA SCIENCE AND ANALYTICS (OPTIONAL)
# ==========================================
pandas>=2.0.3                # Data manipulation and analysis
numpy>=1.24.3                # Numerical computing
matplotlib>=3.7.2            # Plotting and visualization
seaborn>=0.12.2              # Statistical data visualization

# ==========================================
# NETWORKING AND COMMUNICATION
# ==========================================
websockets>=11.0.3           # WebSocket client and server
socketio>=5.8.0              # Real-time communication
paho-mqtt>=1.6.1             # MQTT client for IoT integration

# ==========================================
# TEMPLATE ENGINES
# ==========================================
Jinja2>=3.1.2                # Template engine for code generation
chevron>=0.14.0              # Mustache template engine

# ==========================================
# UTILITY LIBRARIES
# ==========================================
click>=8.1.6                 # Command-line interface creation
tqdm>=4.65.0                 # Progress bars
python-dateutil>=2.8.2       # Date/time utilities
pathlib                      # Path manipulation (built-in in Python 3.4+)
uuid                          # UUID generation (built-in)
hashlib                      # Hashing utilities (built-in)
os                           # Operating system interface (built-in)
sys                          # System-specific parameters (built-in)
time                         # Time-related functions (built-in)
datetime                     # Date and time handling (built-in)
json                         # JSON encoder/decoder (built-in)
re                           # Regular expressions (built-in)

# ==========================================
# MCP SERVER INTEGRATION
# ==========================================
# Note: These are placeholder packages as MCP servers are typically
# external services. Actual integration depends on specific MCP implementations.
# The application uses HTTP/WebSocket clients to communicate with MCP servers.

# ==========================================
# DEVELOPMENT AND DEBUGGING
# ==========================================
ipython>=8.14.0              # Interactive Python shell
ipdb>=0.13.13                # IPython debugger
pdbpp>=0.10.3                # Enhanced Python debugger
watchdog>=3.0.0              # File system event monitoring

# ==========================================
# DATABASE INTEGRATION (OPTIONAL)
# ==========================================
SQLAlchemy>=2.0.19           # SQL toolkit and ORM
alembic>=1.11.1              # Database migration tool
psycopg2-binary>=2.9.7       # PostgreSQL adapter
pymongo>=4.4.1               # MongoDB driver

# ==========================================
# CACHING AND OPTIMIZATION
# ==========================================
diskcache>=5.6.3             # Disk-based caching
functools                    # Function utilities (built-in)
lru-cache                    # LRU cache implementation

# ==========================================
# DOCUMENTATION GENERATION
# ==========================================
Sphinx>=7.1.2                # Documentation generator
sphinx-rtd-theme>=1.3.0      # Read the Docs theme
myst-parser>=2.0.0           # Markdown parser for Sphinx

# ==========================================
# PACKAGING AND DISTRIBUTION
# ==========================================
setuptools>=68.0.0           # Package building
wheel>=0.41.0                # Wheel packaging format
twine>=4.0.2                 # Package uploading tool
build>=0.10.0                # Build backend

# ==========================================
# ENVIRONMENT AND CONFIGURATION
# ==========================================
python-dotenv>=1.0.0         # Environment variable loading
environs>=9.5.0              # Environment variable parsing

# ==========================================
# WEB FRAMEWORKS (FOR API INTEGRATION)
# ==========================================
fastapi>=0.101.1             # Modern web framework for APIs
uvicorn>=0.23.2              # ASGI server
starlette>=0.27.0            # Lightweight ASGI framework

# ==========================================
# VALIDATION AND SERIALIZATION
# ==========================================
marshmallow>=3.20.1          # Serialization library
cerberus>=1.3.5              # Validation library

# ==========================================
# SYSTEM INTEGRATION
# ==========================================
schedule>=1.2.0              # Job scheduling
apscheduler>=3.10.1          # Advanced Python scheduler

# ==========================================
# PLATFORM-SPECIFIC DEPENDENCIES
# ==========================================
# Windows
pywin32>=306; sys_platform == "win32"         # Windows API access
wmi>=1.5.1; sys_platform == "win32"           # Windows Management Interface

# macOS
pyobjc>=9.2; sys_platform == "darwin"         # Objective-C bridge
osascript>=2020.12.3; sys_platform == "darwin" # AppleScript integration

# Linux
python-dbus>=1.3.2; sys_platform == "linux"   # D-Bus integration

# ==========================================
# VERSION CONSTRAINTS AND COMPATIBILITY
# ==========================================
# Python version requirement
# Requires Python 3.9 or higher for optimal performance
# Python 3.11 recommended for best compatibility

# Security updates - always use latest patch versions
# Performance optimization - prefer latest stable versions
# Compatibility - maintain backward compatibility where possible

# ==========================================
# DEVELOPMENT DEPENDENCIES (requirements-dev.txt)
# ==========================================
# These should be in a separate requirements-dev.txt file:
# 
# pre-commit>=3.3.3              # Git pre-commit hooks
# commitizen>=3.6.0              # Conventional commits
# bump2version>=1.0.1            # Version bumping
# invoke>=2.2.0                  # Task execution
# nox>=2023.4.22                 # Automated testing in multiple environments
# tox>=4.6.4                     # Testing in isolated environments

# ==========================================
# OPTIONAL PERFORMANCE ENHANCEMENTS
# ==========================================
# uvloop>=0.17.0; sys_platform != "win32"      # Fast event loop (Unix only)
# orjson>=3.9.2                              # Fast JSON library
# ujson>=5.8.0                               # Ultra-fast JSON encoder/decoder
# cython>=3.0.0                              # C extensions for Python

# ==========================================
# NOTES AND RECOMMENDATIONS
# ==========================================
# 1. Use virtual environments to avoid dependency conflicts
# 2. Pin exact versions for production deployments
# 3. Regular security updates are recommended
# 4. Some packages may have additional system dependencies
# 5. GPU-specific packages may require additional setup
# 6. Consider using pip-tools for dependency management
# 7. Use requirements-dev.txt for development-only dependencies
# 8. Monitor for deprecated packages and update accordingly
# 
# Installation command:
# pip install -r requirements.txt
# 
# For development:
# pip install -r requirements.txt -r requirements-dev.txt
# 
# For production (pinned versions):
# pip install -r requirements-prod.txt